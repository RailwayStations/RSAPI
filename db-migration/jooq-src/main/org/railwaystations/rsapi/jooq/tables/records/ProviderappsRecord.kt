/*
 * This file is generated by jOOQ.
 */
package org.railwaystations.rsapi.jooq.tables.records


import org.jooq.Record3
import org.jooq.impl.UpdatableRecordImpl
import org.railwaystations.rsapi.jooq.tables.ProviderappsTable
import org.railwaystations.rsapi.jooq.tables.pojos.Providerapps


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class ProviderappsRecord private constructor() : UpdatableRecordImpl<ProviderappsRecord>(ProviderappsTable.ProviderappsTable) {

    open var countrycode: String
        set(value): Unit = set(0, value)
        get(): String = get(0) as String

    open var type: String
        set(value): Unit = set(1, value)
        get(): String = get(1) as String

    open var name: String
        set(value): Unit = set(2, value)
        get(): String = get(2) as String

    open var url: String
        set(value): Unit = set(3, value)
        get(): String = get(3) as String

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record3<String?, String?, String?> = super.key() as Record3<String?, String?, String?>

    /**
     * Create a detached, initialised ProviderappsRecord
     */
    constructor(countrycode: String, type: String, name: String, url: String): this() {
        this.countrycode = countrycode
        this.type = type
        this.name = name
        this.url = url
        resetChangedOnNotNull()
    }

    /**
     * Create a detached, initialised ProviderappsRecord
     */
    constructor(value: Providerapps?): this() {
        if (value != null) {
            this.countrycode = value.countrycode
            this.type = value.type
            this.name = value.name
            this.url = value.url
            resetChangedOnNotNull()
        }
    }
}
