/*
 * This file is generated by jOOQ.
 */
package org.railwaystations.rsapi.jooq.tables.records


import org.jooq.Record2
import org.jooq.impl.UpdatableRecordImpl
import org.railwaystations.rsapi.jooq.tables.StationsTable
import org.railwaystations.rsapi.jooq.tables.pojos.Stations


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class StationsRecord private constructor() : UpdatableRecordImpl<StationsRecord>(StationsTable.StationsTable) {

    open var countrycode: String
        set(value): Unit = set(0, value)
        get(): String = get(0) as String

    open var id: String
        set(value): Unit = set(1, value)
        get(): String = get(1) as String

    open var uicibnr: Int?
        set(value): Unit = set(2, value)
        get(): Int? = get(2) as Int?

    open var dbibnr: Int?
        set(value): Unit = set(3, value)
        get(): Int? = get(3) as Int?

    open var ds100: String?
        set(value): Unit = set(4, value)
        get(): String? = get(4) as String?

    open var title: String
        set(value): Unit = set(5, value)
        get(): String = get(5) as String

    open var lat: Double
        set(value): Unit = set(6, value)
        get(): Double = get(6) as Double

    open var lon: Double
        set(value): Unit = set(7, value)
        get(): Double = get(7) as Double

    open var evaId: Int?
        set(value): Unit = set(8, value)
        get(): Int? = get(8) as Int?

    open var active: Boolean?
        set(value): Unit = set(9, value)
        get(): Boolean? = get(9) as Boolean?

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record2<String?, String?> = super.key() as Record2<String?, String?>

    /**
     * Create a detached, initialised StationsRecord
     */
    constructor(countrycode: String, id: String, uicibnr: Int? = null, dbibnr: Int? = null, ds100: String? = null, title: String, lat: Double, lon: Double, evaId: Int? = null, active: Boolean? = null): this() {
        this.countrycode = countrycode
        this.id = id
        this.uicibnr = uicibnr
        this.dbibnr = dbibnr
        this.ds100 = ds100
        this.title = title
        this.lat = lat
        this.lon = lon
        this.evaId = evaId
        this.active = active
        resetChangedOnNotNull()
    }

    /**
     * Create a detached, initialised StationsRecord
     */
    constructor(value: Stations?): this() {
        if (value != null) {
            this.countrycode = value.countrycode
            this.id = value.id
            this.uicibnr = value.uicibnr
            this.dbibnr = value.dbibnr
            this.ds100 = value.ds100
            this.title = value.title
            this.lat = value.lat
            this.lon = value.lon
            this.evaId = value.evaId
            this.active = value.active
            resetChangedOnNotNull()
        }
    }
}
