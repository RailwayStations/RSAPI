/*
 * This file is generated by jOOQ.
 */
package org.railwaystations.rsapi.jooq.tables.records


import java.time.Instant

import org.jooq.Record1
import org.jooq.impl.UpdatableRecordImpl
import org.railwaystations.rsapi.jooq.tables.BlockedUsernamesTable
import org.railwaystations.rsapi.jooq.tables.pojos.BlockedUsernames


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class BlockedUsernamesRecord private constructor() : UpdatableRecordImpl<BlockedUsernamesRecord>(BlockedUsernamesTable.BlockedUsernamesTable) {

    open var id: Long?
        set(value): Unit = set(0, value)
        get(): Long? = get(0) as Long?

    open var name: String?
        set(value): Unit = set(1, value)
        get(): String? = get(1) as String?

    open var createdAt: Instant?
        set(value): Unit = set(2, value)
        get(): Instant? = get(2) as Instant?

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record1<Long?> = super.key() as Record1<Long?>

    /**
     * Create a detached, initialised BlockedUsernamesRecord
     */
    constructor(id: Long? = null, name: String? = null, createdAt: Instant? = null): this() {
        this.id = id
        this.name = name
        this.createdAt = createdAt
        resetChangedOnNotNull()
    }

    /**
     * Create a detached, initialised BlockedUsernamesRecord
     */
    constructor(value: BlockedUsernames?): this() {
        if (value != null) {
            this.id = value.id
            this.name = value.name
            this.createdAt = value.createdAt
            resetChangedOnNotNull()
        }
    }
}
