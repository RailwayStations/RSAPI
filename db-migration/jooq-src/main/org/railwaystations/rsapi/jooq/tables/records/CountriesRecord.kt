/*
 * This file is generated by jOOQ.
 */
package org.railwaystations.rsapi.jooq.tables.records


import org.jooq.Record1
import org.jooq.impl.UpdatableRecordImpl
import org.railwaystations.rsapi.jooq.tables.CountriesTable
import org.railwaystations.rsapi.jooq.tables.pojos.Countries


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class CountriesRecord private constructor() : UpdatableRecordImpl<CountriesRecord>(CountriesTable.CountriesTable) {

    open var id: String
        set(value): Unit = set(0, value)
        get(): String = get(0) as String

    open var name: String
        set(value): Unit = set(1, value)
        get(): String = get(1) as String

    open var timetableurltemplate: String?
        set(value): Unit = set(2, value)
        get(): String? = get(2) as String?

    open var email: String?
        set(value): Unit = set(3, value)
        get(): String? = get(3) as String?

    open var overridelicense: String?
        set(value): Unit = set(4, value)
        get(): String? = get(4) as String?

    open var active: Boolean?
        set(value): Unit = set(5, value)
        get(): Boolean? = get(5) as Boolean?

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record1<String?> = super.key() as Record1<String?>

    /**
     * Create a detached, initialised CountriesRecord
     */
    constructor(id: String, name: String, timetableurltemplate: String? = null, email: String? = null, overridelicense: String? = null, active: Boolean? = null): this() {
        this.id = id
        this.name = name
        this.timetableurltemplate = timetableurltemplate
        this.email = email
        this.overridelicense = overridelicense
        this.active = active
        resetChangedOnNotNull()
    }

    /**
     * Create a detached, initialised CountriesRecord
     */
    constructor(value: Countries?): this() {
        if (value != null) {
            this.id = value.id
            this.name = value.name
            this.timetableurltemplate = value.timetableurltemplate
            this.email = value.email
            this.overridelicense = value.overridelicense
            this.active = value.active
            resetChangedOnNotNull()
        }
    }
}
