/*
 * This file is generated by jOOQ.
 */
package org.railwaystations.rsapi.jooq.tables.pojos


import java.io.Serializable
import java.time.Instant


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
data class Oauth2RegisteredClient(
    val id: String,
    val clientId: String,
    val clientIdIssuedAt: Instant? = null,
    val clientSecret: String? = null,
    val clientSecretExpiresAt: Instant? = null,
    val clientName: String,
    val clientAuthenticationMethods: String,
    val authorizationGrantTypes: String,
    val redirectUris: String? = null,
    val scopes: String,
    val clientSettings: String,
    val tokenSettings: String,
    val postLogoutRedirectUris: String? = null
): Serializable {

    override fun equals(other: Any?): Boolean {
        if (this === other)
            return true
        if (other == null)
            return false
        if (this::class != other::class)
            return false
        val o: Oauth2RegisteredClient = other as Oauth2RegisteredClient
        if (this.id != o.id)
            return false
        if (this.clientId != o.clientId)
            return false
        if (this.clientIdIssuedAt == null) {
            if (o.clientIdIssuedAt != null)
                return false
        }
        else if (this.clientIdIssuedAt != o.clientIdIssuedAt)
            return false
        if (this.clientSecret == null) {
            if (o.clientSecret != null)
                return false
        }
        else if (this.clientSecret != o.clientSecret)
            return false
        if (this.clientSecretExpiresAt == null) {
            if (o.clientSecretExpiresAt != null)
                return false
        }
        else if (this.clientSecretExpiresAt != o.clientSecretExpiresAt)
            return false
        if (this.clientName != o.clientName)
            return false
        if (this.clientAuthenticationMethods != o.clientAuthenticationMethods)
            return false
        if (this.authorizationGrantTypes != o.authorizationGrantTypes)
            return false
        if (this.redirectUris == null) {
            if (o.redirectUris != null)
                return false
        }
        else if (this.redirectUris != o.redirectUris)
            return false
        if (this.scopes != o.scopes)
            return false
        if (this.clientSettings != o.clientSettings)
            return false
        if (this.tokenSettings != o.tokenSettings)
            return false
        if (this.postLogoutRedirectUris == null) {
            if (o.postLogoutRedirectUris != null)
                return false
        }
        else if (this.postLogoutRedirectUris != o.postLogoutRedirectUris)
            return false
        return true
    }

    override fun hashCode(): Int {
        val prime = 31
        var result = 1
        result = prime * result + this.id.hashCode()
        result = prime * result + this.clientId.hashCode()
        result = prime * result + (if (this.clientIdIssuedAt == null) 0 else this.clientIdIssuedAt.hashCode())
        result = prime * result + (if (this.clientSecret == null) 0 else this.clientSecret.hashCode())
        result = prime * result + (if (this.clientSecretExpiresAt == null) 0 else this.clientSecretExpiresAt.hashCode())
        result = prime * result + this.clientName.hashCode()
        result = prime * result + this.clientAuthenticationMethods.hashCode()
        result = prime * result + this.authorizationGrantTypes.hashCode()
        result = prime * result + (if (this.redirectUris == null) 0 else this.redirectUris.hashCode())
        result = prime * result + this.scopes.hashCode()
        result = prime * result + this.clientSettings.hashCode()
        result = prime * result + this.tokenSettings.hashCode()
        result = prime * result + (if (this.postLogoutRedirectUris == null) 0 else this.postLogoutRedirectUris.hashCode())
        return result
    }

    override fun toString(): String {
        val sb = StringBuilder("Oauth2RegisteredClient (")

        sb.append(id)
        sb.append(", ").append(clientId)
        sb.append(", ").append(clientIdIssuedAt)
        sb.append(", ").append(clientSecret)
        sb.append(", ").append(clientSecretExpiresAt)
        sb.append(", ").append(clientName)
        sb.append(", ").append(clientAuthenticationMethods)
        sb.append(", ").append(authorizationGrantTypes)
        sb.append(", ").append(redirectUris)
        sb.append(", ").append(scopes)
        sb.append(", ").append(clientSettings)
        sb.append(", ").append(tokenSettings)
        sb.append(", ").append(postLogoutRedirectUris)

        sb.append(")")
        return sb.toString()
    }
}
