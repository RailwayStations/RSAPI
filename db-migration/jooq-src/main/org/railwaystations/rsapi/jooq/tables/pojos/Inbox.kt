/*
 * This file is generated by jOOQ.
 */
package org.railwaystations.rsapi.jooq.tables.pojos


import java.io.Serializable
import java.time.LocalDateTime


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
data class Inbox(
    val id: Int? = null,
    val photographerid: Int,
    val countrycode: String? = null,
    val stationid: String? = null,
    val title: String? = null,
    val lat: Double? = null,
    val lon: Double? = null,
    val extension: String? = null,
    val comment: String? = null,
    val rejectreason: String? = null,
    val done: Boolean? = null,
    val problemreporttype: String? = null,
    val active: Boolean? = null,
    val crc32: String? = null,
    val notified: Boolean? = null,
    val createdat: LocalDateTime? = null,
    val photoid: Long? = null,
    val posted: Boolean? = null
): Serializable {

    override fun equals(other: Any?): Boolean {
        if (this === other)
            return true
        if (other == null)
            return false
        if (this::class != other::class)
            return false
        val o: Inbox = other as Inbox
        if (this.id == null) {
            if (o.id != null)
                return false
        }
        else if (this.id != o.id)
            return false
        if (this.photographerid != o.photographerid)
            return false
        if (this.countrycode == null) {
            if (o.countrycode != null)
                return false
        }
        else if (this.countrycode != o.countrycode)
            return false
        if (this.stationid == null) {
            if (o.stationid != null)
                return false
        }
        else if (this.stationid != o.stationid)
            return false
        if (this.title == null) {
            if (o.title != null)
                return false
        }
        else if (this.title != o.title)
            return false
        if (this.lat == null) {
            if (o.lat != null)
                return false
        }
        else if (this.lat != o.lat)
            return false
        if (this.lon == null) {
            if (o.lon != null)
                return false
        }
        else if (this.lon != o.lon)
            return false
        if (this.extension == null) {
            if (o.extension != null)
                return false
        }
        else if (this.extension != o.extension)
            return false
        if (this.comment == null) {
            if (o.comment != null)
                return false
        }
        else if (this.comment != o.comment)
            return false
        if (this.rejectreason == null) {
            if (o.rejectreason != null)
                return false
        }
        else if (this.rejectreason != o.rejectreason)
            return false
        if (this.done == null) {
            if (o.done != null)
                return false
        }
        else if (this.done != o.done)
            return false
        if (this.problemreporttype == null) {
            if (o.problemreporttype != null)
                return false
        }
        else if (this.problemreporttype != o.problemreporttype)
            return false
        if (this.active == null) {
            if (o.active != null)
                return false
        }
        else if (this.active != o.active)
            return false
        if (this.crc32 == null) {
            if (o.crc32 != null)
                return false
        }
        else if (this.crc32 != o.crc32)
            return false
        if (this.notified == null) {
            if (o.notified != null)
                return false
        }
        else if (this.notified != o.notified)
            return false
        if (this.createdat == null) {
            if (o.createdat != null)
                return false
        }
        else if (this.createdat != o.createdat)
            return false
        if (this.photoid == null) {
            if (o.photoid != null)
                return false
        }
        else if (this.photoid != o.photoid)
            return false
        if (this.posted == null) {
            if (o.posted != null)
                return false
        }
        else if (this.posted != o.posted)
            return false
        return true
    }

    override fun hashCode(): Int {
        val prime = 31
        var result = 1
        result = prime * result + (if (this.id == null) 0 else this.id.hashCode())
        result = prime * result + this.photographerid.hashCode()
        result = prime * result + (if (this.countrycode == null) 0 else this.countrycode.hashCode())
        result = prime * result + (if (this.stationid == null) 0 else this.stationid.hashCode())
        result = prime * result + (if (this.title == null) 0 else this.title.hashCode())
        result = prime * result + (if (this.lat == null) 0 else this.lat.hashCode())
        result = prime * result + (if (this.lon == null) 0 else this.lon.hashCode())
        result = prime * result + (if (this.extension == null) 0 else this.extension.hashCode())
        result = prime * result + (if (this.comment == null) 0 else this.comment.hashCode())
        result = prime * result + (if (this.rejectreason == null) 0 else this.rejectreason.hashCode())
        result = prime * result + (if (this.done == null) 0 else this.done.hashCode())
        result = prime * result + (if (this.problemreporttype == null) 0 else this.problemreporttype.hashCode())
        result = prime * result + (if (this.active == null) 0 else this.active.hashCode())
        result = prime * result + (if (this.crc32 == null) 0 else this.crc32.hashCode())
        result = prime * result + (if (this.notified == null) 0 else this.notified.hashCode())
        result = prime * result + (if (this.createdat == null) 0 else this.createdat.hashCode())
        result = prime * result + (if (this.photoid == null) 0 else this.photoid.hashCode())
        result = prime * result + (if (this.posted == null) 0 else this.posted.hashCode())
        return result
    }

    override fun toString(): String {
        val sb = StringBuilder("Inbox (")

        sb.append(id)
        sb.append(", ").append(photographerid)
        sb.append(", ").append(countrycode)
        sb.append(", ").append(stationid)
        sb.append(", ").append(title)
        sb.append(", ").append(lat)
        sb.append(", ").append(lon)
        sb.append(", ").append(extension)
        sb.append(", ").append(comment)
        sb.append(", ").append(rejectreason)
        sb.append(", ").append(done)
        sb.append(", ").append(problemreporttype)
        sb.append(", ").append(active)
        sb.append(", ").append(crc32)
        sb.append(", ").append(notified)
        sb.append(", ").append(createdat)
        sb.append(", ").append(photoid)
        sb.append(", ").append(posted)

        sb.append(")")
        return sb.toString()
    }
}
