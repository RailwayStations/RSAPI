/*
 * This file is generated by jOOQ.
 */
package org.railwaystations.rsapi.jooq.keys


import org.jooq.ForeignKey
import org.jooq.UniqueKey
import org.jooq.impl.DSL
import org.jooq.impl.Internal
import org.railwaystations.rsapi.jooq.tables.BlockedUsernamesTable
import org.railwaystations.rsapi.jooq.tables.CountriesTable
import org.railwaystations.rsapi.jooq.tables.InboxTable
import org.railwaystations.rsapi.jooq.tables.Oauth2AuthorizationConsentTable
import org.railwaystations.rsapi.jooq.tables.Oauth2AuthorizationTable
import org.railwaystations.rsapi.jooq.tables.Oauth2RegisteredClientTable
import org.railwaystations.rsapi.jooq.tables.PhotosTable
import org.railwaystations.rsapi.jooq.tables.ProviderappsTable
import org.railwaystations.rsapi.jooq.tables.StationsTable
import org.railwaystations.rsapi.jooq.tables.UsersTable
import org.railwaystations.rsapi.jooq.tables.records.BlockedUsernamesRecord
import org.railwaystations.rsapi.jooq.tables.records.CountriesRecord
import org.railwaystations.rsapi.jooq.tables.records.InboxRecord
import org.railwaystations.rsapi.jooq.tables.records.Oauth2AuthorizationConsentRecord
import org.railwaystations.rsapi.jooq.tables.records.Oauth2AuthorizationRecord
import org.railwaystations.rsapi.jooq.tables.records.Oauth2RegisteredClientRecord
import org.railwaystations.rsapi.jooq.tables.records.PhotosRecord
import org.railwaystations.rsapi.jooq.tables.records.ProviderappsRecord
import org.railwaystations.rsapi.jooq.tables.records.StationsRecord
import org.railwaystations.rsapi.jooq.tables.records.UsersRecord



// -------------------------------------------------------------------------
// UNIQUE and PRIMARY KEY definitions
// -------------------------------------------------------------------------

val KEY_BLOCKED_USERNAMES_NORMALIZEDNAME: UniqueKey<BlockedUsernamesRecord> = Internal.createUniqueKey(BlockedUsernamesTable.BlockedUsernamesTable, DSL.name("KEY_blocked_usernames_normalizedName"), arrayOf(BlockedUsernamesTable.BlockedUsernamesTable.name), true)
val KEY_BLOCKED_USERNAMES_PRIMARY: UniqueKey<BlockedUsernamesRecord> = Internal.createUniqueKey(BlockedUsernamesTable.BlockedUsernamesTable, DSL.name("KEY_blocked_usernames_PRIMARY"), arrayOf(BlockedUsernamesTable.BlockedUsernamesTable.id), true)
val KEY_COUNTRIES_PRIMARY: UniqueKey<CountriesRecord> = Internal.createUniqueKey(CountriesTable.CountriesTable, DSL.name("KEY_countries_PRIMARY"), arrayOf(CountriesTable.CountriesTable.id), true)
val KEY_INBOX_PRIMARY: UniqueKey<InboxRecord> = Internal.createUniqueKey(InboxTable.InboxTable, DSL.name("KEY_inbox_PRIMARY"), arrayOf(InboxTable.InboxTable.id), true)
val KEY_OAUTH2_AUTHORIZATION_PRIMARY: UniqueKey<Oauth2AuthorizationRecord> = Internal.createUniqueKey(Oauth2AuthorizationTable.Oauth2AuthorizationTable, DSL.name("KEY_oauth2_authorization_PRIMARY"), arrayOf(Oauth2AuthorizationTable.Oauth2AuthorizationTable.id), true)
val KEY_OAUTH2_AUTHORIZATION_CONSENT_PRIMARY: UniqueKey<Oauth2AuthorizationConsentRecord> = Internal.createUniqueKey(Oauth2AuthorizationConsentTable.Oauth2AuthorizationConsentTable, DSL.name("KEY_oauth2_authorization_consent_PRIMARY"), arrayOf(Oauth2AuthorizationConsentTable.Oauth2AuthorizationConsentTable.registeredClientId, Oauth2AuthorizationConsentTable.Oauth2AuthorizationConsentTable.principalName), true)
val KEY_OAUTH2_REGISTERED_CLIENT_PRIMARY: UniqueKey<Oauth2RegisteredClientRecord> = Internal.createUniqueKey(Oauth2RegisteredClientTable.Oauth2RegisteredClientTable, DSL.name("KEY_oauth2_registered_client_PRIMARY"), arrayOf(Oauth2RegisteredClientTable.Oauth2RegisteredClientTable.id), true)
val KEY_PHOTOS_PRIMARY: UniqueKey<PhotosRecord> = Internal.createUniqueKey(PhotosTable.PhotosTable, DSL.name("KEY_photos_PRIMARY"), arrayOf(PhotosTable.PhotosTable.id), true)
val KEY_PROVIDERAPPS_PRIMARY: UniqueKey<ProviderappsRecord> = Internal.createUniqueKey(ProviderappsTable.ProviderappsTable, DSL.name("KEY_providerApps_PRIMARY"), arrayOf(ProviderappsTable.ProviderappsTable.countrycode, ProviderappsTable.ProviderappsTable.type, ProviderappsTable.ProviderappsTable.name), true)
val KEY_STATIONS_PRIMARY: UniqueKey<StationsRecord> = Internal.createUniqueKey(StationsTable.StationsTable, DSL.name("KEY_stations_PRIMARY"), arrayOf(StationsTable.StationsTable.countrycode, StationsTable.StationsTable.id), true)
val KEY_USERS_EMAIL: UniqueKey<UsersRecord> = Internal.createUniqueKey(UsersTable.UsersTable, DSL.name("KEY_users_email"), arrayOf(UsersTable.UsersTable.email), true)
val KEY_USERS_NAME: UniqueKey<UsersRecord> = Internal.createUniqueKey(UsersTable.UsersTable, DSL.name("KEY_users_name"), arrayOf(UsersTable.UsersTable.name), true)
val KEY_USERS_PRIMARY: UniqueKey<UsersRecord> = Internal.createUniqueKey(UsersTable.UsersTable, DSL.name("KEY_users_PRIMARY"), arrayOf(UsersTable.UsersTable.id), true)

// -------------------------------------------------------------------------
// FOREIGN KEY definitions
// -------------------------------------------------------------------------

val FK_INBOX_USER: ForeignKey<InboxRecord, UsersRecord> = Internal.createForeignKey(InboxTable.InboxTable, DSL.name("fk_inbox_user"), arrayOf(InboxTable.InboxTable.photographerid), org.railwaystations.rsapi.jooq.keys.KEY_USERS_PRIMARY, arrayOf(UsersTable.UsersTable.id), true)
val FK_PHOTO_STATION: ForeignKey<PhotosRecord, StationsRecord> = Internal.createForeignKey(PhotosTable.PhotosTable, DSL.name("fk_photo_station"), arrayOf(PhotosTable.PhotosTable.countrycode, PhotosTable.PhotosTable.stationid), org.railwaystations.rsapi.jooq.keys.KEY_STATIONS_PRIMARY, arrayOf(StationsTable.StationsTable.countrycode, StationsTable.StationsTable.id), true)
val FK_PHOTO_USER: ForeignKey<PhotosRecord, UsersRecord> = Internal.createForeignKey(PhotosTable.PhotosTable, DSL.name("fk_photo_user"), arrayOf(PhotosTable.PhotosTable.photographerid), org.railwaystations.rsapi.jooq.keys.KEY_USERS_PRIMARY, arrayOf(UsersTable.UsersTable.id), true)
val FK_COUNTRY: ForeignKey<ProviderappsRecord, CountriesRecord> = Internal.createForeignKey(ProviderappsTable.ProviderappsTable, DSL.name("fk_country"), arrayOf(ProviderappsTable.ProviderappsTable.countrycode), org.railwaystations.rsapi.jooq.keys.KEY_COUNTRIES_PRIMARY, arrayOf(CountriesTable.CountriesTable.id), true)
