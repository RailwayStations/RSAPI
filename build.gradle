plugins {
	id 'org.springframework.boot' version '2.6.7'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id 'pmd'
	id "com.github.spotbugs" version "5.0.7"
	id "org.openapi.generator" version "5.4.0"
}

group = 'org.railwaystations'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '18'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

bootJar {
	mainClass.set('org.railwaystations.rsapi.app.RsapiApplication')
}

openApiValidate {
	inputSpec = "$rootDir/src/main/resources/static/openapi.yaml".toString()
	recommend = true
}

openApiGenerate {
	generatorName = "spring"
	inputSpec = "$rootDir/src/main/resources/static/openapi.yaml".toString()
	outputDir = "$buildDir/generated".toString()
	apiPackage = "org.railwaystations.rsapi.adapter.in.web.api"
	modelPackage = "org.railwaystations.rsapi.adapter.in.web.model"
	modelNameSuffix = "Dto"
	configOptions = [
			interfaceOnly: "true",
			openApiNullable: "false",
			skipDefaultInterface: "true",
			dateLibrary: "java8"
	]
}

ext {
	springVersion = '2.6.7'
	testContainersVersion = '1.17.1'
	jdbiVersion = '3.28.0'
	swaggerRequestValidatorVersion = '2.27.2'
}

dependencies {
	implementation "org.springframework.boot:spring-boot-starter-mail:$springVersion"
	implementation "org.springframework.boot:spring-boot-starter-security:$springVersion"
	implementation "org.springframework.boot:spring-boot-starter-web:$springVersion"
	implementation "org.springframework.boot:spring-boot-starter-validation:$springVersion"
	implementation "org.springframework.boot:spring-boot-starter-jdbc:$springVersion"
	implementation "org.springframework.boot:spring-boot-starter-actuator:$springVersion"
	implementation "org.springframework.boot:spring-boot-starter-thymeleaf:$springVersion"
	implementation 'org.liquibase:liquibase-core:4.10.0'
	implementation "org.jdbi:jdbi3-spring5:$jdbiVersion"
	implementation "org.jdbi:jdbi3-sqlobject:$jdbiVersion"
	implementation "com.goterl:lazysodium-java:5.1.1"
	implementation "net.java.dev.jna:jna:5.11.0"
	implementation "commons-codec:commons-codec:1.15"
	implementation "commons-io:commons-io:2.11.0"
	implementation "org.apache.commons:commons-lang3:3.12.0"
	implementation "javax.validation:validation-api:2.0.1.Final"
	implementation 'io.swagger.core.v3:swagger-annotations:2.2.0'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	runtimeOnly "org.mariadb.jdbc:mariadb-java-client:3.0.4"
	testImplementation "org.springframework.boot:spring-boot-starter-test:$springVersion"
	testImplementation "org.springframework.security:spring-security-test:5.6.3"
	testImplementation "org.awaitility:awaitility:4.2.0"
	testImplementation "org.testcontainers:testcontainers:$testContainersVersion"
	testImplementation "org.testcontainers:junit-jupiter:$testContainersVersion"
	testImplementation "org.testcontainers:mariadb:$testContainersVersion"
	testImplementation "com.atlassian.oai:swagger-request-validator-core:$swaggerRequestValidatorVersion"
	testImplementation "com.atlassian.oai:swagger-request-validator-springmvc:$swaggerRequestValidatorVersion"
	testImplementation "com.atlassian.oai:swagger-request-validator-mockmvc:$swaggerRequestValidatorVersion"
	testImplementation 'org.assertj:assertj-core:3.22.0'
	testImplementation 'com.github.tomakehurst:wiremock-jre8:2.33.2'
}

test {
	useJUnitPlatform()
}

pmd {
	ruleSets = ["category/java/errorprone.xml", "category/java/bestpractices.xml"]
	ignoreFailures = true
}

spotbugs {
	ignoreFailures.set(true)
}

spotbugsTest {
	ignoreFailures = true
}
